{"version":3,"sources":["Box.js","Row.js","App.js","index.js"],"names":["Box","handleChange","e","props","updateEntry","row","col","target","value","handleAddRow","addRows","handleAddCol","addCols","handleAddBoth","handleKeyDown","keyCode","tryToDelete","document","getElementById","focus","cols","rows","this","autoComplete","id","onKeyDown","onChange","num","React","Component","Row","boxes","map","x","i","App","handleFocus","select","state","matrix","length","temp","toDelete","splice","setState","j","val","push","emptyRow","updateParameter","updated","sparseVal","start","end","delim","matrixTable","className","readonly","onClick","matrixToString","defaultVal","result","toString","ParameterInput","type","defaultValue","ReactDOM","render"],"mappings":"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","file":"static/js/main.eb1384c6.chunk.js","sourcesContent":["import React from 'react';\n\nclass Box extends React.Component {\n    render() {\n        if (this.props.cols === (this.props.col + 1) && this.props.rows === (this.props.row + 1))\n            return <td><input autoComplete = \"off\" key = {this.props.row + \":\" + this.props.col} id = {this.props.row + \":\" + this.props.col} onKeyDown = {this.handleKeyDown}\n            onChange = {this.handleAddBoth} value={this.props.num} /></td>\n\n        if (this.props.cols === (this.props.col + 1))\n            return <td><input autoComplete = \"off\" key = {this.props.row + \":\" + this.props.col} id = {this.props.row + \":\" + this.props.col} onKeyDown = {this.handleKeyDown}\n            onChange = {this.handleAddCol} value={this.props.num} /></td>\n\n        if (this.props.rows === (this.props.row + 1))\n            return <td><input autoComplete = \"off\" key = {this.props.row + \":\" + this.props.col} id = {this.props.row + \":\" + this.props.col} onKeyDown = {this.handleKeyDown}\n            onChange = {this.handleAddRow} value={this.props.num} /></td>\n\n        else\n            return <td><input autoComplete = \"off\" key = {this.props.row + \":\" + this.props.col} id = {this.props.row + \":\" + this.props.col} onKeyDown = {this.handleKeyDown}\n            onChange = {this.handleChange} value={this.props.num} /></td>\n    }\n\n    handleChange = (e) => {\n        this.props.updateEntry(this.props.row, this.props.col, e.target.value);\n    }\n    handleAddRow = (e) => {\n        this.props.addRows(1);\n        this.props.updateEntry(this.props.row, this.props.col, e.target.value);\n    }\n    handleAddCol = (e) => {\n        this.props.addCols(1);\n        this.props.updateEntry(this.props.row, this.props.col, e.target.value);\n    }\n    handleAddBoth = (e) => {\n        this.props.addCols(1);\n        this.props.addRows(1);\n        this.props.updateEntry(this.props.row, this.props.col, e.target.value);\n    }\n    \n    handleKeyDown = (e) => {\n        if (e.keyCode === 8 && e.target.value === \"\") {\n           this.props.tryToDelete(this.props.row, this.props.col); \n        }\n\n        else if (e.keyCode === 37)  { //Left\n            if (this.props.col !== 0) {\n                document.getElementById((this.props.row) + \":\" + (this.props.col - 1)).focus(); \n            } \n            else if (this.props.row !== 0) {  //Wrap\n                document.getElementById((this.props.row - 1) + \":\" + (this.props.cols - 1)).focus();\n            }\n        } \n        \n        else if (e.keyCode === 39) { //Right\n            //skip the last col if you aren't on the first row\n            if (this.props.col === this.props.cols - 2 && this.props.row !== 0 && this.props.row !== this.props.rows - 1) { \n                document.getElementById((this.props.row + 1) + \":0\").focus();\n            } \n            else if (this.props.col !== this.props.cols - 1) { \n                document.getElementById((this.props.row) + \":\" + (this.props.col + 1) ).focus();\n            } \n            else if (this.props.row !== this.props.rows - 1) { //Wrap\n                document.getElementById((this.props.row + 1) + \":0\").focus();\n            }\n        }\n\n        else if (e.keyCode === 40) { //Down\n            /*\n            if (this.props.row === this.props.rows - 2 && this.props.col !== 0 && this.props.col !== this.props.cols - 1) { //skip the last one if you aren't  on the first col\n                document.getElementById(\"0:\" + (this.props.col + 1)).focus();\n            }\n            else */\n            if (this.props.row !== this.props.rows - 1) {\n                document.getElementById((this.props.row + 1) +  \":\" + (this.props.col) ).focus();\n            } \n            else if (this.props.col !== this.props.cols - 1) { //Wrap\n                document.getElementById(\"0:\" + (this.props.col + 1)).focus();\n            }\n\n        } else if (e.keyCode === 38) { //Up\n            if (this.props.row !== 0) { \n                document.getElementById(this.props.row - 1 + \":\" + this.props.col).focus();\n            } \n            else if (this.props.col !== 0) { //Wrap\n                document.getElementById(this.props.rows - 1 +  \":\" + (this.props.col - 1)).focus();\n            }\n        }\n        \n    }\n\n}\nexport default Box;","import React from 'react';\nimport Box from './Box.js';\n\n\nclass Row extends React.Component {\n    render() {\n        return <tr>{this.props.boxes.map((x, i) => \n            <Box addRows = {this.props.addRows} \n            addCols = {this.props.addCols}\n            tryToDelete = {this.props.tryToDelete}\n            rows = {this.props.rows}\n            cols = {this.props.cols}\n            updateEntry = {this.props. updateEntry} \n            num={x} \n            row = {this.props.row} \n            col = {i} />)}</tr>\n    }\n}\nexport default Row;","import React from 'react';\nimport Row from './Row.js';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {matrix: [[\"\", \"\"], [\"\", \"\"]], sparseVal: \"0\", start: \"{\", end: \"}\", delim: \",\"}\n    }\n    \n    render() {\n        var matrixTable = this.state.matrix.map((x, i) => \n        <Row rows = {this.state.matrix.length} \n            cols = {this.state.matrix[0].length}\n            tryToDelete = {this.tryToDelete}\n            addRows = {this.addRows} \n            addCols = {this.addCols} \n            updateEntry = {this.updateEntry}\n            boxes={x} row = {i} />)\n        return (\n        <div>\n            Start entering your matrix below. The pink row and column are not part of the matrix, and typing in one of them will create a new row or column. Use the arrow keys to navigate in the matrix.\n            <table className = \"table table-bordered table-hover\" >\n                <tbody>\n                    {matrixTable}\n                </tbody>\n            </table>\n            <textarea readonly onClick = {this.handleFocus} className=\"output\" value = {this.matrixToString(this.state.matrix)} />\n            <p>Interpret empty elements (excluding pink row and pink column) as &nbsp;\n                 <ParameterInput defaultVal = {\"0\"} id={\"sparse\"} updateParameter={this.updateParameter}/></p>\n            <p>Open arrays with &nbsp;\n                 <ParameterInput defaultVal = {\"{\"} id={\"start\"} updateParameter={this.updateParameter}/></p>\n            <p>End arrays with &nbsp;\n                 <ParameterInput defaultVal = {\"}\"} id={\"end\"} updateParameter={this.updateParameter}/></p>\n            <p>Separate elements with &nbsp;\n                 <ParameterInput defaultVal = {\",\"} id={\"delim\"} updateParameter={this.updateParameter}/></p>\n        </div>)\n    }\n\n    handleFocus = (e) => {\n        e.target.select();\n    }\n\n    tryToDelete = (row, col) => {\n        if (row === this.state.matrix.length - 1 || col === this.state.matrix[0].length - 1) \n            return null;\n            \n        var temp = this.state.matrix;\n        var toDelete = true;\n        \n        //{{1,1,1,1},\n        // {0,0,0,0}, row\n        // {1,1,1,1}}\n        //Try to Delete an Empty Row\n        for (var i = 0; i < this.state.matrix[0].length; i++) {\n            if (this.state.matrix[row][i] !== \"\") {\n                toDelete = false;\n                break;\n            }\n        }\n        if (toDelete)\n            temp.splice(row, 1);\n    \n        //     col\n        //{{1,1,0,1},\n        // {1,1,0,1},\n        // {1,1,0,1}}\n        toDelete = true;\n        for (var i = 0; i < this.state.matrix.length; i++) {\n            if (this.state.matrix[i][col] !== \"\"){\n                toDelete = false;\n                break;\n            }\n        }\n\n        if (toDelete)\n            for (var i = 0; i < temp.length; i++) {\n                temp[i].splice(col, 1); //delete cols\n            } \n    \n\n        this.setState({matrix: temp});        \n    }\n\n    \n    updateEntry = (i, j, val) => {\n        var temp = this.state.matrix;\n        temp[i][j] = val;\n\n        this.setState({matrix: temp});        \n    }\n    \n    addCols = (num) => {\n        var temp = this.state.matrix;\n        for (var i = 0; i < temp.length; i++) {\n            for (var j = 0; j < num; j++)\n                temp[i].push(\"\")\n        }\n\n        this.setState({matrix: temp});  \n    }\n\n    addRows = (num) => {\n        var emptyRow = [];\n        for (var i = 0; i < this.state.matrix[0].length; i++) {\n            emptyRow.push(\"\");\n        }\n\n        var temp = this.state.matrix;\n        for (var i = 0; i < num; i++) {\n            temp.push(emptyRow)\n        }\n\n        this.setState({matrix: temp});  \n    }\n\n    updateParameter = (i, updated) => {\n        switch (i) {\n            case \"sparse\":\n                this.setState({sparseVal: updated});  \n                break;\n            case \"start\":\n                this.setState({start: updated});  \n                break;  \n            case \"end\":\n                this.setState({end: updated});  \n                break;  \n            case \"delim\":\n                this.setState({delim: updated});  \n                break;  \n            default: break;\n  \n        }\n    }\n\n    matrixToString() {\n        var start = this.state.start;\n        var end = this.state.end;\n        var delim = this.state.delim;\n        var result = start.toString();\n\n        for (var i = 0; i < this.state.matrix.length - 1; i++) {\n            result += start;\n            \n            for (var j = 0; j < this.state.matrix[0].length - 1; j++) {\n                if (this.state.matrix[i][j] !== \"\")\n                    result += this.state.matrix[i][j];\n                else\n                    result += this.state.sparseVal;\n                    \n                if (j !== this.state.matrix[0].length - 2) {\n                    result += delim;\n                }\n            }\n            \n            result += end;\n            if (i !== this.state.matrix.length - 2) {\n                result += delim;\n            }\n\n        }\n        return result + end;\n\n    }\n}\n\nclass ParameterInput extends React.Component {\n    render() {\n        return <input type=\"text\" defaultValue = {this.props.defaultVal} onChange = {this.handleChange}></input>\n    }\n\n    handleChange = (e) => {\n        this.props.updateParameter(this.props.id, e.target.value)\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\n    \nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}