{"version":3,"sources":["matrix/table/Box.js","matrix/table/Row.js","inputs/ParameterTextInput.js","inputs/ParameterSwitchInput.js","matrix/MatrixExport.js","matrix/MatrixEditor.js","selectors/SelectorButton.js","selectors/Selectors.js","App.js","index.js"],"names":["Box","handleChange","e","props","mirror","updateEntry","col","row","target","value","handleAddRow","max","Math","cols","rows","addCols","addRows","handleAddCol","handleAddBoth","handleKeyDown","keyCode","tryToDelete","selectionStart","document","getElementById","focus","length","this","tabIndex","autoComplete","id","onKeyDown","onChange","num","React","Component","Row","boxes","map","x","i","ParameterTextInput","updateParameter","type","style","width","defaultValue","defaultVal","ParameterSwitchInput","checked","className","htmlFor","name","text","defaultChecked","MatrixEditor","handleFocus","select","updateExportParameter","updated","setState","environment","start","end","delim","latex","state","readOnly","onClick","matrixToString","matrix","result","j","sparseVal","toString","toggleExport","showExport","temp","toDelete","splice","updateMatrix","val","alert","push","Array","fill","mirrorRowsOntoColumns","mode","symmetric","mirrorColumnsOntoRows","transpose","transposed","arr","randomMatrix","low","parseInt","prompt","high","isNaN","floor","random","matrixTable","MatrixExport","SelectorButton","updateSelection","renameMatrix","test","displayName","matrices","displaySize","resizeMatrix","pushNewName","pushNewSize","substring","indexOf","blur","size","activeElement","class","active","onBlur","onFocus","onFocusCapture","Selectors","sort","current","selectors","matrixName","selection","toUpperCase","addMatrix","AddButton","App","key","console","log","selected","oldName","newName","copyMatrix","toCopy","slice","charCode","String","fromCharCode","scrollTop","scrollHeight","lessRows","min","lessCols","resized","editor","ReactDOM","render"],"mappings":"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","file":"static/js/main.a55c3e89.chunk.js","sourcesContent":["import React from 'react';\n\nclass Box extends React.Component {\n    render() {\n        if (this.props.cols === (this.props.col + 1) && \n            this.props.rows === (this.props.row + 1))\n            \n            return <td><input tabIndex = {-1} \n            autoComplete = \"off\" \n            key = {this.props.row + \":\" + this.props.col} \n            id = {this.props.row + \":\" + this.props.col} \n            onKeyDown = {this.handleKeyDown}\n            onChange = {this.handleAddBoth} \n            value={this.props.num} /></td>\n\n        if (this.props.cols === (this.props.col + 1))\n            return <td><input \n            tabIndex = {this.props.row === 0 ?  \"\" : -1} \n            autoComplete = \"off\" \n            key = {this.props.row + \":\" + this.props.col} \n            id = {this.props.row + \":\" + this.props.col} \n            onKeyDown = {this.handleKeyDown}\n            onChange = {this.handleAddCol} \n            value={this.props.num} /></td>\n\n        if (this.props.rows === (this.props.row + 1))\n            return <td><input autoComplete = \"off\" \n            key = {this.props.row + \":\" + this.props.col} \n            id = {this.props.row + \":\" + this.props.col} \n            onKeyDown = {this.handleKeyDown}\n            onChange = {this.handleAddRow} \n            value={this.props.num} /></td>\n\n        return <td><input autoComplete = \"off\" \n            key = {this.props.row + \":\" + this.props.col} \n            id = {this.props.row + \":\" + this.props.col} \n            onKeyDown = {this.handleKeyDown}\n            onChange = {this.handleChange} \n            value={this.props.num} \n            /></td>\n    }\n\n    handleChange = (e) => {\n        if (this.props.mirror) {\n            this.props.updateEntry(this.props.col, this.props.row, e.target.value);\n        }\n            \n        this.props.updateEntry(this.props.row, this.props.col, e.target.value);\n\n\n    }\n    handleAddRow = (e) => {\n        if (this.props.mirror) {\n            var max = Math.max(this.props.cols, this.props.rows + 1)\n            this.props.addCols(max - this.props.cols);        \n            this.props.addRows(max - this.props.rows);\n            this.props.updateEntry(this.props.col, this.props.row, e.target.value);\n        }\n        else {\n            this.props.addRows(1);\n        }\n\n        this.props.updateEntry(this.props.row, this.props.col, e.target.value);\n    }\n    handleAddCol = (e) => {\n        if (this.props.mirror) {\n            var max = Math.max(this.props.cols + 1, this.props.rows)\n            this.props.addCols(max - this.props.cols);        \n            this.props.addRows(max - this.props.rows);\n            this.props.updateEntry(this.props.col, this.props.row, e.target.value);\n        } else {\n            this.props.addCols(1);\n        }\n        this.props.updateEntry(this.props.row, this.props.col, e.target.value);\n    }\n    handleAddBoth = (e) => {\n    \n        if (this.props.mirror) {\n            var max = Math.max(this.props.cols + 1, this.props.rows + 1)\n            this.props.addCols(max - this.props.cols);        \n            this.props.addRows(max - this.props.rows);\n            this.props.updateEntry(this.props.col, this.props.row, e.target.value);\n        } else {\n            this.props.addCols(1);\n            this.props.addRows(1);\n        }\n        this.props.updateEntry(this.props.row, this.props.col, e.target.value);\n    }\n    \n    handleKeyDown = (e) => {\n        if (e.keyCode === 16) {\n            if (this.props.rows === (this.props.row + 1))\n                this.props.addRows(1);\n            if (this.props.cols === (this.props.col + 1))\n                this.props.addCols(1)\n            }\n\n        if (e.keyCode === 8 && e.target.value === \"\") {\n           this.props.tryToDelete(this.props.row, this.props.col); \n        }\n        else if (e.target.selectionStart === 0 && e.keyCode === 37)  { //Left\n            if (this.props.col !== 0) {\n                document.getElementById((this.props.row) + \":\" + (this.props.col - 1)).focus();\n                document.getElementById((this.props.row) + \":\" + (this.props.col - 1)).selectionStart = 0;\n\n            } \n            else if (this.props.row !== 0) {  //Wrap\n                document.getElementById((this.props.row - 1) + \":\" + (this.props.cols - 1)).focus();\n            }\n        } \n        \n        else if (e.target.selectionStart === e.target.value.length && e.keyCode === 39) { //Right\n            //skip the last col if you aren't on the first row/\n            /*\n            if (this.props.col === this.props.cols - 2 && this.props.row !== 0 && this.props.row !== this.props.rows - 1) { \n                document.getElementById((this.props.row + 1) + \":0\").focus();\n                document.getElementById((this.props.row + 1) + \":0\").selectionStart = 0;\n\n            } \n            else */\n            if (this.props.col !== this.props.cols - 1) { \n                document.getElementById((this.props.row) + \":\" + (this.props.col + 1)).focus();\n                document.getElementById((this.props.row) + \":\" + (this.props.col + 1)).selectionStart = -1;\n\n            } \n            else if (this.props.row !== this.props.rows - 1) { //Wrap\n                document.getElementById((this.props.row + 1) + \":0\").focus();\n            }\n        }\n\n        else if (e.keyCode === 40) { //Down\n            /*\n            if (this.props.row === this.props.rows - 2 && this.props.col !== 0 && this.props.col !== this.props.cols - 1) { //skip the last one if you aren't  on the first col\n                document.getElementById(\"0:\" + (this.props.col + 1)).focus();\n            }\n            else */\n            if (this.props.row !== this.props.rows - 1) {\n                document.getElementById((this.props.row + 1) +  \":\" + (this.props.col) ).focus();\n            } \n            else if (this.props.col !== this.props.cols - 1) { //Wrap\n                document.getElementById(\"0:\" + (this.props.col + 1)).focus();\n            }\n\n        } else if (e.keyCode === 38) { //Up\n            if (this.props.row !== 0) {     \n                document.getElementById(this.props.row - 1 + \":\" + this.props.col).focus();\n            } \n            else if (this.props.col !== 0) { //Wrap\n                document.getElementById(this.props.rows - 1 +  \":\" + (this.props.col - 1)).focus();\n            }\n        }\n        \n    }\n\n}\nexport default Box;","import React from 'react';\nimport Box from './Box.js';\n\n\nclass Row extends React.Component {\n    render() {\n        return <tr>{this.props.boxes.map((x, i) => \n            <Box addRows = {this.props.addRows} \n            addCols = {this.props.addCols}\n            tryToDelete = {this.props.tryToDelete}\n            rows = {this.props.rows}\n            cols = {this.props.cols}\n            updateEntry = {this.props.updateEntry} \n            num ={x} \n            row = {this.props.row} \n            col = {i}\n            key = {this.props.row + \":\" + i}\n            mirror = {this.props.mirror}\n            />)}\n            </tr>\n    }\n}\nexport default Row;","import React from 'react';\n\nclass ParameterTextInput extends React.Component {\n    render() {\n        return <input type=\"text\" style = {{width: this.props.width}} defaultValue = {this.props.defaultVal} onChange = {this.handleChange}></input>\n    }\n\n    handleChange = (e) => {\n        this.props.updateParameter(this.props.id, e.target.value)\n    }\n}\n\n\n\nexport default ParameterTextInput;\n","import React from 'react';\n\nclass ParameterSwitchInput extends React.Component {\n    render() {\n        return  <div className=\"form-check form-switch\">\n        <label className=\"form-check-label\" htmlFor={this.props.name + \"Switch\"}> {this.props.text} </label>\n            <input className=\"form-check-input\" onChange = {this.handleChange} type=\"checkbox\" defaultChecked={this.props.defaultVal} id={this.props.name + \"Switch\"} />\n        </div>  \n    }\n\n    handleChange = (e) => {\n        this.props.updateParameter(this.props.id, e.target.checked)\n    }\n}\n\n\n\nexport default ParameterSwitchInput;\n","import React from 'react';\nimport ParameterTextInput from '../inputs/ParameterTextInput.js';\nimport ParameterSwitchInput from '../inputs/ParameterSwitchInput.js';\n\nclass MatrixEditor extends React.Component {    \n    constructor(props) {\n        super(props);\n        this.state = {start: \"{\", end: \"}\", delim: \",\", latex: false, environment: \"bmatrix\"};\n    }\n\n    render() { \n        return <div className = \"row export\">\n            <textarea readOnly = {true} onClick = {this.handleFocus} className=\"output\" value = {this.matrixToString(this.props.matrix)} />\n            <div className = \"col-sm-2\">\n                <ParameterSwitchInput defaultVal = {false} id={\"latex\"} text = {\"LaTeX Format\"} updateParameter={this.updateExportParameter}/>\n            </div>\n            \n            <div className = \"col-sm-10\">\n                {this.state.latex ?\n                <p>Environment &nbsp;\n                <ParameterTextInput width = {\"100px\"} defaultVal = {\"bmatrix\"} id={\"environment\"} updateParameter={this.updateExportParameter}/></p>\n                :\n\n                <div>\n                <p>Open arrays with &nbsp;\n                    <ParameterTextInput width = {\"20px\"} defaultVal = {\"{\"} id={\"start\"} updateParameter={this.updateExportParameter}/></p>\n                <p>End arrays with &nbsp;\n                    <ParameterTextInput width = {\"20px\"} defaultVal = {\"}\"} id={\"end\"} updateParameter={this.updateExportParameter}/></p>\n                <p>Separate elements with &nbsp;\n                    <ParameterTextInput width = {\"20px\"} defaultVal = {\",\"} id={\"delim\"} updateParameter={this.updateExportParameter}/></p>\n                </div>}\n            </div>    \n        </div>\n    }\n    handleFocus = (e) => {\n        e.target.select();\n    }\n    \n    matrixToString() {\n        if (this.state.latex) {\n            var result = \"\\\\begin{\" + this.state.environment + \"}\\n\";\n            for (var i = 0; i < this.props.matrix.length - 1; i++) {\n                for (var j = 0; j < this.props.matrix[0].length - 1; j++) {\n                    if (this.props.matrix[i][j] === \"\") {\n                        result += this.props.sparseVal;        \n                    } else {\n                        result += this.props.matrix[i][j];\n                    }            \n\n                    if (j !== this.props.matrix[0].length - 2) {\n                        result += \" & \";\n                    } else if (i !== this.props.matrix.length - 2) {\n                        result += \" \\\\\\\\ \\n\";\n                    }\n                }\n            }\n\n            return result + \"\\n\\\\end{\" + this.state.environment + \"}\"; \n        }\n\n        var start = this.state.start;\n        var end = this.state.end;\n        var delim = this.state.delim;\n        result = start.toString();\n\n        for (i = 0; i < this.props.matrix.length - 1; i++) {\n            result += start;\n            \n            for (j = 0; j < this.props.matrix[0].length - 1; j++) {\n                if (this.props.matrix[i][j] !== \"\")\n                    result += this.props.matrix[i][j];\n                else\n                    result += this.props.sparseVal;\n                    \n                if (j !== this.props.matrix[0].length - 2) {\n                    result += delim;\n                }\n            }\n            result += end;\n            if (i !== this.props.matrix.length - 2) {\n                result += delim;\n            }\n        }\n        return result + end;\n\n    }\n\n    updateExportParameter = (i, updated) => {\n        switch (i) {\n            case \"environment\":\n                this.setState({environment: updated});  \n                break;  \n            case \"start\":\n                this.setState({start: updated});  \n                break;  \n            case \"end\":\n                this.setState({end: updated});  \n                break;  \n            case \"delim\":\n                this.setState({delim: updated});  \n                break;  \n            case \"latex\":\n                this.setState({latex: updated});  \n                break; \n            default: break;\n  \n        }\n    }\n}\n\n\n\n\nexport default MatrixEditor;\n","import React from 'react';\nimport Row from './table/Row.js';\nimport MatrixExport from \"./MatrixExport.js\"\n\nclass MatrixEditor extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {showExport: false, sparseVal: \"0\"}\n    }\n\n    render() {\n\n     var matrixTable = this.props.matrix.map((x, i) => \n        <Row rows = {this.props.matrix.length} \n            cols = {this.props.matrix[0].length}\n            tryToDelete = {this.tryToDelete}\n            addRows = {this.addRows} \n            addCols = {this.addCols} \n            updateEntry = {this.updateEntry}\n            boxes={x} \n            row = {i} \n            key = {\"row\" + i}\n            mirror = {this.props.mirror}/>)\n            \n        return (\n        <div className = \"matrixEditor\">\n\n            <table className = \"table table-bordered table-hover\" >\n                <tbody> {matrixTable} </tbody>\n            </table>\n            \n            <button className = \"btn btn-secondary matrixButtons\" onClick={this.transpose}>Transpose</button>\n            <button className = \"btn btn-secondary matrixButtons\" onClick={this.randomMatrix}>Random Matrix</button>\n            <button className = \"btn btn-secondary matrixButtons\" onClick={this.mirrorRowsOntoColumns}>Mirror Rows Across Diagonal</button>\n            <button className = \"btn btn-secondary matrixButtons\" onClick={this.mirrorColumnsOntoRows}>Mirror Columns Across Diagonal </button>\n            <button className = \"btn btn-secondary matrixButtons\" onClick={this.toggleExport}>{this.state.showExport ? \"Close\" : \"Export Matrix\"}</button>\n            \n            {this.state.showExport ?\n                <MatrixExport matrix = {this.props.matrix} sparseVal = {this.state.sparseVal} />\n            : null }   \n        </div>)\n    }\n\n\n\n    toggleExport = () => {\n        if (this.state.showExport)\n            this.setState({showExport: false});\n        else\n            this.setState({showExport: true});\n    }\n\n\n    tryToDelete = (row, col) => {\n        if (row !== 50 && col !== 50 && (row === this.props.matrix.length - 1 || col === this.props.matrix[0].length - 1)) \n            return null;\n            \n        var temp = this.props.matrix;\n        var toDelete = true;\n        \n        //{{1,1,1,1},\n        // {0,0,0,0}, row\n        // {1,1,1,1}}\n        //Try to Delete an Empty Row\n        if (this.props.matrix.length > 2) {\n            for (var i = 0; i < this.props.matrix[0].length; i++) {\n                if (this.props.matrix[row][i] !== \"\") {\n                    toDelete = false;\n                    break;\n                }\n            }\n            if (toDelete)\n                temp.splice(row, 1);\n        }\n    \n        //     col\n        //{{1,1,0,1},\n        // {1,1,0,1},\n        // {1,1,0,1}}\n        toDelete = true;\n        if (this.props.matrix[0].length > 2) {\n            for (i = 0; i < this.props.matrix.length; i++) {\n                if (this.props.matrix[i][col] !== \"\") {\n                    toDelete = false;\n                    break;\n                }\n            }\n\n            if (toDelete) {\n                for (i = 0; i < temp.length; i++) {\n                    temp[i].splice(col, 1); //delete cols\n                } \n            }\n        }\n\n        this.props.updateMatrix(temp, this.props.name); \n    \n    }\n\n    \n    updateEntry = (i, j, val) => {\n        if (i != 50 && j != 50) {\n            var temp = this.props.matrix;\n            temp[i][j] = val;\n            this.props.updateMatrix(temp, this.props.name); \n        }\n        else\n            alert(\"Max matrix size reached!\")\n    }\n    \n    addCols = (num) => {\n        var temp = this.props.matrix;\n\n        if (temp[0].length + num > 51)\n            num = 51 - temp[0].length;\n\n        for (var i = 0; i < temp.length; i++) {\n            for (var j = 0; j < num; j++)\n                temp[i].push(\"\")\n        }\n\n        this.props.updateMatrix(temp, this.props.name); \n        return temp;\n    }\n\n    addRows = (num) => {\n        var temp = this.props.matrix;\n\n        if (temp.length + num > 51)\n            num = 51 - temp.length;\n\n\n        for (var i = 0; i < num; i++) {\n            temp.push(new Array(temp[0].length).fill(\"\"));\n        }\n        this.props.updateMatrix(temp, this.props.name); \n        return temp; \n    }\n\n    mirrorRowsOntoColumns = (mode) => {        \n        if (this.props.matrix.length > this.props.matrix[0].length) { //more rows than cols {\n            var symmetric = this.addCols(this.props.matrix.length - this.props.matrix[0].length);\n            \n        }\n        else /*if (this.props.matrix.length < this.props.matrix[0].length) */ {\n            symmetric = this.addRows(this.props.matrix[0].length - this.props.matrix.length)\n            \n        }\n   \n        for (var row = 0; row < symmetric.length; row++) {\n            for (var col = row + 1; col < symmetric.length; col++) {\n                symmetric[col][row] = symmetric[row][col];\n            }\n        }\n\n        this.props.updateMatrix(symmetric, this.props.name); \n    }\n\n    mirrorColumnsOntoRows = (mode) => {        \n        if (this.props.matrix.length > this.props.matrix[0].length) { //more rows than cols {\n            var symmetric = this.addCols(this.props.matrix.length - this.props.matrix[0].length);\n            \n        }\n        else /*if (this.props.matrix.length < this.props.matrix[0].length) */ {\n            symmetric = this.addRows(this.props.matrix[0].length - this.props.matrix.length)\n            \n        }\n\n        for (var row = 0; row < symmetric.length; row++) {\n                for (var col = row + 1; col < symmetric.length; col++) {\n                    symmetric[row][col] = symmetric[col][row];\n                }\n        }\n    \n        this.props.updateMatrix(symmetric, this.props.name); \n    }\n\n    transpose = () => {\n        var transposed = Array(this.props.matrix[0].length).fill(0)\n        for (var i = 0; i < transposed.length; i++) {\n            var arr = Array(this.props.matrix.length).fill(0)\n            for (var j = 0; j < arr.length; j++)\n                arr[j] = this.props.matrix[j][i]\n            transposed[i] = arr       \n        }\n\n        this.props.updateMatrix(transposed, this.props.name); \n    }       \n\n\n    randomMatrix = () => {\n        var temp = this.props.matrix\n        var low = parseInt(prompt(\"Lower bound?\", 1))\n        var high = parseInt(prompt(\"Upper bound?\", low + 10)) + 1\n\n\n        if (!isNaN(low) && !isNaN(high)) {\n            for (var i = 0; i < temp.length - 1; i++)\n                for (var j = 0; j < temp[0].length - 1; j++)\n                    temp[i][j] = Math.floor(Math.random() * (high - low)) + low\n            \n            this.props.updateMatrix(temp, this.props.name);\n        }\n\n    }\n\n    \n    \n}\n\n\n\nexport default MatrixEditor;\n","import React from 'react';\n\nclass SelectorButton extends React.Component {\n    constructor(props) {\n        super(props);\n        var size = (this.props.matrices[this.props.name].length - 1) + \" x \" +\n            (this.props.matrices[this.props.name][0].length - 1)\n\n        this.state = {displayName: this.props.name, displaySize: size}\n\n    }\n    render() {\n        if (document.activeElement === document.getElementById(\"size \" + this.props.name)) {\n            var size = this.state.displaySize\n        }\n        else {\n            size = (this.props.matrices[this.props.name].length - 1) + \" x \" +\n                (this.props.matrices[this.props.name][0].length - 1)\n        }\n\n\n        return <button type=\"button\" \n            class={\"list-group-item list-group-item-action\" + ((this.props.active) ? \" active\" : \"\")}\n            onClick = {this.updateSelection}>\n\n            <input type = \"text\" value = {this.state.displayName} id = {this.props.name}\n            onChange = {this.renameMatrix}\n            onKeyDown = {this.handleKeyDown}\n            onBlur = {this.pushNewName}\n            onFocus = {this.handleFocus}\n            />\n\n            <input className = \"sizeInfo\" id = {\"size \" + this.props.name}\n            value = {size} \n            onChange = {this.resizeMatrix}\n            onBlur = {this.pushNewSize}\n            onFocusCapture = {this.handleFocus}\n            onKeyDown = {this.handleKeyDown}\n            />\n        </button>\n\n    }\n\n    updateSelection = () => {\n        this.props.updateSelection(this.props.name);\n    }\n\n\n    renameMatrix = (e) => {\n        var updated = e.target.value;\n        if (/^[A-Za-z_]*$/.test(updated)) {\n           this.setState({displayName: updated})\n        }\n\n    }\n\n    handleFocus = (e) => {\n        var rows = this.props.matrices[this.props.name].length - 1\n        var cols = this.props.matrices[this.props.name][0].length - 1\n\n        this.setState({displaySize: (rows) + \" x \" + cols});\n    }\n\n    resizeMatrix = (e) => {\n        var updated = e.target.value;\n\n        if (/^[0-9 \\s]*[x]?[0-9 \\s]*$/.test(updated)) {\n            this.setState({displaySize: updated})\n        }\n    }\n\n    pushNewName = () => {\n        if (this.state.displayName !== this.props.name)\n            if (this.state.displayName === \"\") {\n                alert(\"The name can not be blank!\")\n                this.setState({displayName: this.props.name})\n            }\n            else if (this.state.displayName in this.props.matrices) {\n                alert(\"The name \" + this.state.displayName + \" already exists!\")\n                \n                this.setState({displayName: this.props.name})\n            } else {\n                this.props.renameMatrix(this.props.name, this.state.displayName)\n                this.props.updateSelection(this.state.displayName)\n            }\n    }\n\n    pushNewSize = () => {   \n        if (/[0-9]* ?x ?[0-9]*/.test(this.state.displaySize)) {\n            var rows = parseInt(this.state.displaySize.substring(0, this.state.displaySize.indexOf(\"x\")));\n            var cols = parseInt(this.state.displaySize.substring(this.state.displaySize.indexOf(\"x\") + 1));\n            \n            if (rows > 0 && cols > 0) {\n                this.setState({displaySize: (rows) + \" x \" + cols});\n                this.props.resizeMatrix(this.props.name, rows + 1, cols + 1);\n            } else {\n                alert(\"Dimensions can not be zero\");\n                var rows = this.props.matrices[this.props.name].length - 1\n                var cols = this.props.matrices[this.props.name][0].length - 1\n\n                this.setState({displaySize: (rows) + \" x \" + cols});\n            }\n        } else {\n            var rows = this.props.matrices[this.props.name].length - 1\n            var cols = this.props.matrices[this.props.name][0].length - 1\n\n            this.setState({displaySize: (rows) + \" x \" + cols});\n        }\n    }\n\n    handleKeyDown = (e) => {\n        if (e.keyCode === 13) {\n            e.target.blur();\n        }\n    }\n\n    \n\n\n\n}\n\nexport default SelectorButton;","import React from 'react';\nimport ParameterSwitchInput from '../inputs/ParameterSwitchInput';\nimport ParameterTextInput from '../inputs/ParameterTextInput';\nimport SelectorButton from './SelectorButton';\n\nclass Selectors extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {sort: false};\n    }\n    render() {\n\n        var selectors = []\n        for (var matrixName in this.props.matrices)\n            selectors.push(<SelectorButton \n                name = {matrixName}\n                key = {matrixName}\n                updateSelection = {this.props.updateSelection}\n                renameMatrix = {this.props.renameMatrix}\n                resizeMatrix = {this.props.resizeMatrix}\n                active = {this.props.selection === matrixName}\n                matrices = {this.props.matrices}/>\n        )\n\n        if (this.state.sort) {\n            var current, i, j;\n            for (i = 1; i < selectors.length; i++) {\n                current = selectors[i]\n                if (current.props.name.toUpperCase() < selectors[i - 1].props.name.toUpperCase()) {\n                    for (j = i - 1; j >= 0; j--) {\n                        if (current.props.name < selectors[j].props.name)\n                            selectors[j + 1] = selectors[j]\n                        else\n                            break;\n                    }\n\n                    selectors[j + 1] = current;\n                }\n            }\n        }\n\n        selectors.push(<AddButton key = \" add \" addMatrix = {this.props.addMatrix} />)\n\n        return  <div class = \"row\">\n            <div class = \"col-sm-4\">\n                <div id = \"selectors\" class=\"list-group\">\n                    {selectors}    \n                </div>\n            </div>\n            <div class = \"col-sm-4\">\n                <ul>\n                    <li>Click on a Matrix's name to rename it. Valid characters are uppercase and lowercase letters, and underscores.</li>\n                    <li>Type in a pink box Click on a Matrix's dimensions to resize it. The maximum size is 50 x 50.</li>\n                </ul>   \n            </div>\n            <div class = \"col-sm-4\">\n                <ul>\n\n                    <li>Interpret empty elements (excluding pink boxes) as &nbsp;\n                    <ParameterTextInput width = {\"30px\"} defaultVal = {\"0\"} id={\"sparse\"} updateParameter={this.props.updateParameter}/> </li>\n                    <li><ParameterSwitchInput defaultVal = {false} name={\"mirror\"} text = {\"Mirror along Diagonal\"} updateParameter={this.props.updateParameter}/></li>\n                </ul>   \n            </div>\n        </div>\n    }\n\n\n}\n\n\n\nclass AddButton extends React.Component {\n    render() {\n        return <button type=\"button\" \n            class={\"list-group-item list-group-item-info\"}\n            onClick = {this.addMatrix}>\n            New Matrix\n        </button>\n    }\n\n    addMatrix = () => {\n        this.props.addMatrix();   \n    }\n}\n\nexport default Selectors;\n","import React from 'react';\nimport MatrixEditor from './matrix/MatrixEditor.js';\nimport Selectors from \"./selectors/Selectors.js\"\n\nexport const MaxMatrixSize = React.createContext(50);\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mirror: false,\n            sparseVal: \"0\",\n            selection: \"A\", \n            matrices: {\"A\": [[\"\", \"\"], [\"\", \"\"]]\n        \n        }   \n        }\n    }\n\n\n    render() {\n\n        if (this.state.selection in this.state.matrices)\n            var editor = <MatrixEditor\n                matrix = {this.state.matrices[this.state.selection]} \n                name = {this.state.selection} \n                updateMatrix = {this.updateMatrix}\n                updateParameter = {this.updateParameter}\n                mirror = {this.state.mirror}\n                />\n        else\n            editor = null;\n\n\n        return (\n            <div> \n                <Selectors matrices = {this.state.matrices} \n                    updateSelection = {this.updateSelection} \n                    addMatrix = {this.addMatrix}\n                    renameMatrix = {this.renameMatrix}\n                    selection = {this.state.selection}\n                    updateMatrix = {this.updateMatrix}\n                    resizeMatrix = {this.resizeMatrix}\n                updateParameter = {this.updateParameter}/>\n                    \n                {editor} \n            </div>\n        )\n    }\n    \n    updateMatrix = (updated, key) => {\n        var temp = this.state.matrices;\n        temp[key] = updated;\n\n        this.setState({matrices: temp});\n        console.log(this.state.matrices)\n    }\n    \n    updateSelection = (selected) => {\n        this.setState({selection: selected})\n    }\n\n    renameMatrix = (oldName, newName) => {        \n        var temp = this.state.matrices;\n        if (newName in temp)\n            return false;\n\n        temp[newName] = temp[oldName];\n        delete temp[oldName];\n\n        this.setState({matrices: temp});\n        return true;\n    }\n\n    copyMatrix = (toCopy, name) => {\n        var temp = this.state.matrices;\n        temp[name] = temp[toCopy].map(function(arr) { return arr.slice(); });\n        this.setState({matrices: temp});\n    }\n\n    addMatrix = () => {\n        var temp = this.state.matrices;\n        var name = \"A\";\n        var charCode = 65;\n\n        while (name in temp) {\n            //if (name.charAt(name.length - 1) === \"Z\") {\n            if (charCode === 90) { \n                name += \"A\"\n                charCode = 65;\n            }\n            else\n                name = name.substring(0, name.length - 1) + String.fromCharCode(++charCode);\n        }\n\n\n        temp[name] = [[\"\", \"\"], [\"\", \"\"]];\n        this.setState({matrices: temp}, () => {\n            var selectors = document.getElementById(\"selectors\");\n            selectors.scrollTop = selectors.scrollHeight;\n        });\n\n\n    }\n\n    updateParameter = (i, updated) => {\n        switch (i) {\n            case \"sparse\":\n                this.setState({sparseVal: updated})\n                break;\n            case \"mirror\":\n                this.setState({mirror: updated});  \n                break; \n                \n            default: break;\n  \n        }\n    \n    }\n\n    resizeMatrix = (name, rows, cols) => {\n        if (this.state.matrices[name].length !== rows || this.state.matrices[name][0].length !== cols) {\n            if (rows > 51)\n                rows = 51\n            if (cols > 51)\n                cols = 51\n\n            var lessRows = Math.min(rows, this.state.matrices[name].length)\n            var lessCols = Math.min(cols, this.state.matrices[name][0].length)\n\n            var resized = Array(rows).fill([])\n            for (var i = 0; i < lessRows - 1; i++) {            \n                var arr = Array(cols).fill(\"\")\n                for (var j = 0; j < lessCols - 1; j++) {\n                    arr[j] = this.state.matrices[name][i][j]\n                }\n\n                for (var j = lessCols - 1; j < cols; j++) {\n                    arr[j] = \"\";\n                }\n                \n                resized[i] = arr;\n            }\n\n            \n            for (i = lessRows - 1; i < rows; i++) \n                resized[i] = Array(cols).fill(\"\");\n\n            console.log(resized)\n            console.log(lessCols)\n            this.updateMatrix(resized, name); \n        }\n    }\n\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\n    \nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}