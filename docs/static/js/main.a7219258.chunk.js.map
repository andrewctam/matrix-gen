{"version":3,"sources":["Box.js","Row.js","App.js","index.js"],"names":["Box","handleChange","e","props","updateEntry","row","col","target","value","handleAddRow","addRows","handleAddCol","addCols","handleAddBoth","handleKeyDown","keyCode","rows","cols","tryToDelete","selectionStart","document","getElementById","focus","length","this","tabIndex","autoComplete","id","onKeyDown","onChange","num","React","Component","Row","boxes","map","x","i","App","handleFocus","select","state","matrix","temp","toDelete","splice","setState","j","val","push","emptyRow","updateParameter","updated","sparseVal","start","end","delim","latex","matrixTable","className","readonly","onClick","matrixToString","defaultVal","class","type","for","result","toString","ParameterInput","defaultValue","ReactDOM","render"],"mappings":"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","file":"static/js/main.a7219258.chunk.js","sourcesContent":["import React from 'react';\n\nclass Box extends React.Component {\n    render() {\n        if (this.props.cols === (this.props.col + 1) && this.props.rows === (this.props.row + 1))\n            return <td>< input tabIndex = {-1} autoComplete = \"off\" key = {this.props.row + \":\" + this.props.col} id = {this.props.row + \":\" + this.props.col} onKeyDown = {this.handleKeyDown}\n            onChange = {this.handleAddBoth} value={this.props.num} /></td>\n\n        if (this.props.cols === (this.props.col + 1))\n            return <td>< input tabIndex = {this.props.row === 0 ?  \"\" : -1} autoComplete = \"off\" key = {this.props.row + \":\" + this.props.col} id = {this.props.row + \":\" + this.props.col} onKeyDown = {this.handleKeyDown}\n            onChange = {this.handleAddCol} value={this.props.num} /></td>\n\n        if (this.props.rows === (this.props.row + 1))\n            return <td>< input autoComplete = \"off\" key = {this.props.row + \":\" + this.props.col} id = {this.props.row + \":\" + this.props.col} onKeyDown = {this.handleKeyDown}\n            onChange = {this.handleAddRow} value={this.props.num} /></td>\n\n        else\n            return <td>< input  autoComplete = \"off\" key = {this.props.row + \":\" + this.props.col} id = {this.props.row + \":\" + this.props.col} onKeyDown = {this.handleKeyDown}\n            onChange = {this.handleChange} value={this.props.num} /></td>\n    }\n\n    handleChange = (e) => {\n        this.props.updateEntry(this.props.row, this.props.col, e.target.value);\n    }\n    handleAddRow = (e) => {\n        this.props.addRows(1);\n        this.props.updateEntry(this.props.row, this.props.col, e.target.value);\n    }\n    handleAddCol = (e) => {\n        this.props.addCols(1);\n        this.props.updateEntry(this.props.row, this.props.col, e.target.value);\n    }\n    handleAddBoth = (e) => {\n        this.props.addCols(1);\n        this.props.addRows(1);\n        this.props.updateEntry(this.props.row, this.props.col, e.target.value);\n    }\n    \n    handleKeyDown = (e) => {\n        if (e.keyCode === 16) {\n            if (this.props.rows === (this.props.row + 1))\n            this.props.addRows(1);\n            if (this.props.cols === (this.props.col + 1))\n            this.props.addCols(1);\n        }\n\n        if (e.keyCode === 8 && e.target.value === \"\") {\n           this.props.tryToDelete(this.props.row, this.props.col); \n        }\n        else if (e.target.selectionStart === 0 && e.keyCode === 37)  { //Left\n            if (this.props.col !== 0) {\n                document.getElementById((this.props.row) + \":\" + (this.props.col - 1)).focus();\n                document.getElementById((this.props.row) + \":\" + (this.props.col - 1)).selectionStart = 0;\n\n            } \n            else if (this.props.row !== 0) {  //Wrap\n                document.getElementById((this.props.row - 1) + \":\" + (this.props.cols - 1)).focus();\n            }\n        } \n        \n        else if (e.target.selectionStart === e.target.value.length && e.keyCode === 39) { //Right\n            //skip the last col if you aren't on the first row/\n            /*\n            if (this.props.col === this.props.cols - 2 && this.props.row !== 0 && this.props.row !== this.props.rows - 1) { \n                document.getElementById((this.props.row + 1) + \":0\").focus();\n                document.getElementById((this.props.row + 1) + \":0\").selectionStart = 0;\n\n            } \n            else */\n            if (this.props.col !== this.props.cols - 1) { \n                document.getElementById((this.props.row) + \":\" + (this.props.col + 1)).focus();\n                document.getElementById((this.props.row) + \":\" + (this.props.col + 1)).selectionStart = -1;\n\n            } \n            else if (this.props.row !== this.props.rows - 1) { //Wrap\n                document.getElementById((this.props.row + 1) + \":0\").focus();\n            }\n        }\n\n        else if (e.keyCode === 40) { //Down\n            /*\n            if (this.props.row === this.props.rows - 2 && this.props.col !== 0 && this.props.col !== this.props.cols - 1) { //skip the last one if you aren't  on the first col\n                document.getElementById(\"0:\" + (this.props.col + 1)).focus();\n            }\n            else */\n            if (this.props.row !== this.props.rows - 1) {\n                document.getElementById((this.props.row + 1) +  \":\" + (this.props.col) ).focus();\n            } \n            else if (this.props.col !== this.props.cols - 1) { //Wrap\n                document.getElementById(\"0:\" + (this.props.col + 1)).focus();\n            }\n\n        } else if (e.keyCode === 38) { //Up\n            if (this.props.row !== 0) {     \n                document.getElementById(this.props.row - 1 + \":\" + this.props.col).focus();\n            } \n            else if (this.props.col !== 0) { //Wrap\n                document.getElementById(this.props.rows - 1 +  \":\" + (this.props.col - 1)).focus();\n            }\n        }\n        \n    }\n\n}\nexport default Box;","import React from 'react';\nimport Box from './Box.js';\n\n\nclass Row extends React.Component {\n    render() {\n        return <tr>{this.props.boxes.map((x, i) => \n            <Box addRows = {this.props.addRows} \n            addCols = {this.props.addCols}\n            tryToDelete = {this.props.tryToDelete}\n            rows = {this.props.rows}\n            cols = {this.props.cols}\n            updateEntry = {this.props. updateEntry} \n            num ={x} \n            row = {this.props.row} \n            col = {i} />)}</tr>\n    }\n}\nexport default Row;","import React from 'react';\nimport Row from './Row.js';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {matrix: [[\"\", \"\"], [\"\", \"\"]], sparseVal: \"0\", start: \"{\", end: \"}\", delim: \",\", latex: false}\n    }\n    \n    render() {\n        var matrixTable = this.state.matrix.map((x, i) => \n        <Row rows = {this.state.matrix.length} \n            cols = {this.state.matrix[0].length}\n            tryToDelete = {this.tryToDelete}\n            addRows = {this.addRows} \n            addCols = {this.addCols} \n            updateEntry = {this.updateEntry}\n            boxes={x} \n            row = {i} />)\n\n        return (\n        <div>\n            Start entering your matrix below. The pink row and column are not ignored from the matrix, and typing in one of them will create a new row or column. Use the arrow keys or Tab to quickly navigate the matrix.\n            <table className = \"table table-bordered table-hover\" >\n                <tbody>\n                    {matrixTable}\n                </tbody>\n            </table>\n\n            <textarea readonly onClick = {this.handleFocus} className=\"output\" value = {this.matrixToString(this.state.matrix)} />\n            <p>Interpret empty elements (excluding pink row and pink column) as &nbsp;\n                 <ParameterInput defaultVal = {\"0\"} id={\"sparse\"} updateParameter={this.updateParameter}/></p>\n            <div class=\"form-check form-switch\">\n                <input class=\"form-check-input\" onChange = {() => {this.setState({latex: !this.state.latex})}} type=\"checkbox\" value=\"\" id=\"latexToggle\" />\n                <label class=\"form-check-label\" for=\"latexToggle\">Format as LaTeX matrix</label>\n            </div>\n            {!this.state.latex ?\n            <div>\n            <p>Open arrays with &nbsp;\n                 <ParameterInput defaultVal = {\"{\"} id={\"start\"} updateParameter={this.updateParameter}/></p>\n            <p>End arrays with &nbsp;\n                 <ParameterInput defaultVal = {\"}\"} id={\"end\"} updateParameter={this.updateParameter}/></p>\n            <p>Separate elements with &nbsp;\n                 <ParameterInput defaultVal = {\",\"} id={\"delim\"} updateParameter={this.updateParameter}/></p>\n            </div>\n            : null}\n\n            \n        </div>)\n    }\n\n    handleFocus = (e) => {\n        e.target.select();\n    }\n\n    tryToDelete = (row, col) => {\n        if (row === this.state.matrix.length - 1 || col === this.state.matrix[0].length - 1) \n            return null;\n            \n        var temp = this.state.matrix;\n        var toDelete = true;\n        \n        //{{1,1,1,1},\n        // {0,0,0,0}, row\n        // {1,1,1,1}}\n        //Try to Delete an Empty Row\n        for (var i = 0; i < this.state.matrix[0].length; i++) {\n            if (this.state.matrix[row][i] !== \"\") {\n                toDelete = false;\n                break;\n            }\n        }\n        if (toDelete)\n            temp.splice(row, 1);\n    \n        //     col\n        //{{1,1,0,1},\n        // {1,1,0,1},\n        // {1,1,0,1}}\n        toDelete = true;\n        for (var i = 0; i < this.state.matrix.length; i++) {\n            if (this.state.matrix[i][col] !== \"\"){\n                toDelete = false;\n                break;\n            }\n        }\n\n        if (toDelete)\n            for (var i = 0; i < temp.length; i++) {\n                temp[i].splice(col, 1); //delete cols\n            } \n    \n\n        this.setState({matrix: temp});        \n    }\n\n    \n    updateEntry = (i, j, val) => {\n        var temp = this.state.matrix;\n        temp[i][j] = val;\n\n        this.setState({matrix: temp});        \n    }\n    \n    addCols = (num) => {\n        var temp = this.state.matrix;\n        for (var i = 0; i < temp.length; i++) {\n            for (var j = 0; j < num; j++)\n                temp[i].push(\"\")\n        }\n\n        this.setState({matrix: temp});  \n    }\n\n    addRows = (num) => {\n        var emptyRow = [];\n        for (var i = 0; i < this.state.matrix[0].length; i++) {\n            emptyRow.push(\"\");\n        }\n\n        var temp = this.state.matrix;\n        for (var i = 0; i < num; i++) {\n            temp.push(emptyRow)\n        }\n\n        this.setState({matrix: temp});  \n    }\n\n    updateParameter = (i, updated) => {\n        switch (i) {\n            case \"sparse\":\n                this.setState({sparseVal: updated});  \n                break;\n            case \"start\":\n                this.setState({start: updated});  \n                break;  \n            case \"end\":\n                this.setState({end: updated});  \n                break;  \n            case \"delim\":\n                this.setState({delim: updated});  \n                break;  \n            default: break;\n  \n        }\n    }\n\n    matrixToString() {\n        if (this.state.latex) {\n            var latex = \"\";\n            for (var i = 0; i < this.state.matrix.length - 1; i++) {\n                for (var j = 0; j < this.state.matrix[0].length - 1; j++) {\n                    if (this.state.matrix[i][j] !== \"\")\n                        latex += this.state.matrix[i][j];\n                    else\n                        latex += this.state.sparseVal;                    \n                    if (j !== this.state.matrix[0].length - 2)\n                        latex += \" & \";\n                    else if (i !== this.state.matrix.length - 2)\n                        latex += \" \\\\\\\\ \\n\";\n                }\n            }\n            return latex; \n        }\n\n        var start = this.state.start;\n        var end = this.state.end;\n        var delim = this.state.delim;\n        var result = start.toString();\n\n        for (var i = 0; i < this.state.matrix.length - 1; i++) {\n            result += start;\n            \n            for (var j = 0; j < this.state.matrix[0].length - 1; j++) {\n                if (this.state.matrix[i][j] !== \"\")\n                    result += this.state.matrix[i][j];\n                else\n                    result += this.state.sparseVal;\n                    \n                if (j !== this.state.matrix[0].length - 2) {\n                    result += delim;\n                }\n            }\n            \n            result += end;\n            if (i !== this.state.matrix.length - 2) {\n                result += delim;\n            }\n        }\n        return result + end;\n\n    }\n}\n\nclass ParameterInput extends React.Component {\n    render() {\n        return <input type=\"text\" defaultValue = {this.props.defaultVal} onChange = {this.handleChange}></input>\n    }\n\n    handleChange = (e) => {\n        this.props.updateParameter(this.props.id, e.target.value)\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\n    \nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}